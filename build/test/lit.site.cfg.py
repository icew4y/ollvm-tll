## Autogenerated from D:/Project/ollvm-tll/test/lit.site.cfg.py.in
## Do not edit!

import sys

config.host_triple = "x86_64-pc-win32"
config.target_triple = "x86_64-pc-win32"
config.llvm_src_root = "D:/Project/ollvm-tll"
config.llvm_obj_root = "D:/Project/ollvm-tll/build"
config.llvm_tools_dir = "D:/Project/ollvm-tll/build/%(build_mode)s/bin"
config.llvm_lib_dir = "D:/Project/ollvm-tll/build/$(Configuration)/lib"
config.llvm_shlib_dir = "D:/Project/ollvm-tll/build/%(build_mode)s/bin"
config.llvm_shlib_ext = ".dll"
config.llvm_exe_ext = ".exe"
config.lit_tools_dir = ""
config.python_executable = "C:/Python37-x64/python.exe"
config.gold_executable = "D:/Soft/x86_64-5.4.0-release-posix-seh-rt_v5-rev0/mingw64/bin/ld.gold.exe"
config.ld64_executable = ""
config.llvm_tool_lto_build = 1
config.ocamlfind_executable = "OCAMLFIND-NOTFOUND"
config.have_ocamlopt = 0
config.have_ocaml_ounit = 0
config.ocaml_flags = ""
config.include_go_tests = 1
config.go_executable = ""
config.enable_shared = 0
config.enable_assertions = 0
config.enable_abi_breaking_checks = ""
config.targets_to_build = " AArch64 AMDGPU ARM BPF Hexagon Lanai Mips MSP430 NVPTX PowerPC Sparc SystemZ X86 XCore"
config.native_target = "X86"
config.llvm_bindings = "".split(' ')
config.host_os = "Windows"
config.host_cc = "C:/Program Files (x86)/Microsoft Visual Studio/2019/Professional/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe "
config.host_cxx = "C:/Program Files (x86)/Microsoft Visual Studio/2019/Professional/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe "
config.host_ldflags = "/machine:x64 /STACK:10000000"
config.llvm_use_intel_jitevents = 0
config.llvm_use_sanitizer = ""
config.have_zlib = 0
config.have_libxar = 0
config.have_dia_sdk = 0
config.enable_ffi = 0
config.build_shared_libs = 0
config.link_llvm_dylib = 0
config.llvm_libxml2_enabled = ""
config.llvm_host_triple = 'x86_64-pc-win32'
config.host_arch = "AMD64"
config.have_opt_viewer_modules = 0

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_shlib_dir = config.llvm_shlib_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

import lit.llvm
lit.llvm.initialize(lit_config, config)


# Let the main config do the real work.
lit_config.load_config(config, "D:/Project/ollvm-tll/test/lit.cfg.py")
